// Dependencies
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _events = require('events');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

// Public

var Carrack = (function (_EventEmitter) {
  _inherits(Carrack, _EventEmitter);

  function Carrack() {
    _classCallCheck(this, Carrack);

    _get(Object.getPrototypeOf(Carrack.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Carrack, [{
    key: 'once',
    value: function once(event, listener) {
      var _this = this;

      if (typeof listener !== 'function') {
        throw new TypeError('listener must be a function');
      }

      var fired = false;

      var onceListener = function onceListener() {
        _this.removeListener(event, onceListener);

        if (fired === false) {
          fired = true;
          return listener.apply(undefined, arguments);
        }
      };
      this.on(event, onceListener);

      return this;
    }
  }, {
    key: 'emit',
    value: function emit(event) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var promises = [];

      this.listeners(event).forEach(function (listener) {
        promises.push(listener.apply(undefined, args));
      });

      return _bluebird2['default'].all(promises);
    }
  }]);

  return Carrack;
})(_events.EventEmitter);

exports['default'] = Carrack;
module.exports = exports['default'];
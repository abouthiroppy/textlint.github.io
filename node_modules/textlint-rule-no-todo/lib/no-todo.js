// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _textlintRuleHelper = require("textlint-rule-helper");

/**
 * @param {RuleContext} context
 */

exports["default"] = function (context) {
    var _ref;

    var helper = new _textlintRuleHelper.RuleHelper(context);
    var Syntax = context.Syntax;
    return (_ref = {}, _defineProperty(_ref, Syntax.Str, function (node) {
        var Syntax = context.Syntax;
        if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote])) {
            return;
        }
        // get text from node
        var text = context.getSource(node);
        // does text contain "todo:"?
        if (/todo:/i.test(text)) {
            context.report(node, new context.RuleError("found TODO: '" + text + "'"));
        }
    }), _defineProperty(_ref, Syntax.ListItem, function (node) {
        var text = context.getSource(node);
        if (/\[\s+\]\s/i.test(text)) {
            context.report(node, new context.RuleError("found TODO: '" + text + "'"));
        }
    }), _ref);
};

;
module.exports = exports["default"];

/*
    # Header
    Todo: quick fix this.
*/

/*
    # Header
    - [ ] Todo
*/
//# sourceMappingURL=no-todo.js.map
{"version":3,"sources":["../src/no-todo.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;kCACY,sBAAsB;;;;;;qBAIhC,UAAU,OAAO,EAAE;;;AAC9B,QAAI,MAAM,GAAG,mCAAe,OAAO,CAAC,CAAC;AACrC,QAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC5B,6CAKK,MAAM,CAAC,GAAG,EAAC,UAAC,IAAI,EAAE;AACf,YAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC5B,YAAI,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE;AAC1E,mBAAO;SACV;;AAED,YAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;AAEnC,YAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrB,mBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;SAC7E;KACJ,yBAKA,MAAM,CAAC,QAAQ,EAAC,UAAC,IAAI,EAAE;AACpB,YAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACnC,YAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACzB,mBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;SAC7E;KACJ,SACJ;CACJ;;AAAA,CAAC","file":"no-todo.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {RuleHelper} from \"textlint-rule-helper\"\n/**\n * @param {RuleContext} context\n */\nexport default function (context) {\n    var helper = new RuleHelper(context);\n    var Syntax = context.Syntax;\n    return {\n        /*\n            # Header\n            Todo: quick fix this.\n        */\n        [Syntax.Str](node) {\n            var Syntax = context.Syntax;\n            if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote])) {\n                return;\n            }\n            // get text from node\n            var text = context.getSource(node);\n            // does text contain \"todo:\"?\n            if (/todo:/i.test(text)) {\n                context.report(node, new context.RuleError(\"found TODO: '\" + text + \"'\"));\n            }\n        },\n        /*\n            # Header\n            - [ ] Todo\n        */\n        [Syntax.ListItem](node) {\n            var text = context.getSource(node);\n            if (/\\[\\s+\\]\\s/i.test(text)) {\n                context.report(node, new context.RuleError(\"found TODO: '\" + text + \"'\"));\n            }\n        }\n    }\n};\n"]}
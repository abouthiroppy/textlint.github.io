{"version":3,"sources":["../src/AcronymCreator.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;;;;;;;;IAOQ,cAAc;AAC/B,aADiB,cAAc,GACjB;8BADG,cAAc;;AAE3B,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;;iBAHgB,cAAc;;gCAKvB,IAAI,EAAE;AACV,gBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;;;4CAEmB;AAChB,mBAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;SACrC;;;yCAEgB;AACb,gBAAM,OAAO,GAAG,eApBf,oBAAoB,EAoBgB,IAAI,CAAC,UAAU,CAAC,CAAC;AACtD,gBAAI,CAAC,KAAK,EAAE,CAAC;AACb,mBAAO,OAAO,CAAC;SAClB;;;gCAEO;AACJ,gBAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACxB;;;WArBgB,cAAc;;;kBAAd,cAAc","file":"AcronymCreator.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { expandWordsToAcronym } from \"./word-utils\";\n/**\n * Build acronym from words.\n *\n * Word Word Word => WWW\n */\nexport default class AcronymCreator {\n    constructor() {\n        this._wordQueue = [];\n    }\n\n    addWord(word) {\n        this._wordQueue.push(word);\n    }\n\n    canExtractAcronym() {\n        return this._wordQueue.length > 0;\n    }\n\n    extractAcronym() {\n        const acronym = expandWordsToAcronym(this._wordQueue);\n        this.clear();\n        return acronym;\n    }\n\n    clear() {\n        this._wordQueue = [];\n    }\n}\n"]}
{"version":3,"sources":["../src/word-utils.js"],"names":[],"mappings":";;;;;QAAgB,aAAa,GAAb,aAAa;QAQb,sBAAsB,GAAtB,sBAAsB;QAwBtB,oBAAoB,GAApB,oBAAoB;AAhC7B,SAAS,aAAa,CAAC,IAAI,EAAE;AAChC,WAAO,WAAU,CAAC,IAAI,CAAC,IAAI,CAAC;MAAC;CAChC;;;;;;AAAA,AAMM,SAAS,sBAAsB,CAAC,WAAW,EAAE;AAChD,QAAI,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpC,QAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,QAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,YAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC,YAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACpB,2BAAe,GAAG,IAAI,CAAC;SAC1B,MAAM;AACH,gBAAI,eAAe,EAAE;AACjB,uBAAO,IAAI,eAAe,CAAC;AAC3B,+BAAe,GAAG,IAAI,CAAC;aAC1B;SACJ;KACJ;AACD,WAAO,OAAO,CAAC;CAClB;;;;;;;;AAAA,AAQM,SAAS,oBAAoB,CAAC,KAAK,EAAE;AACxC,QAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACpB,eAAO,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3C;;AAAA,AAED,WAAO,KAAK,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,IAAI,EAAK;AACnC,eAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B,eAAO,OAAO,CAAC;KAClB,EAAE,EAAE,CAAC,CAAC;CACV","file":"word-utils.js","sourcesContent":["export function isAllCapitals(word) {\n    return /^[A-Z]+$/.test(word);\n}\n/**\n * Capital Word to Acronym\n * @param {string} CapitalWord\n * @returns {string} return Acronym\n */\nexport function expandOneWordToAcronym(CapitalWord) {\n    let acronym = CapitalWord.charAt(0);\n    let restWord = CapitalWord.slice(1);\n    let lastCapitalChar = null;\n    for (let i = 0; i < restWord.length; i++) {\n        const char = restWord.charAt(i);\n        if (/[A-Z]/.test(char)) {\n            lastCapitalChar = char;\n        } else {\n            if (lastCapitalChar) {\n                acronym += lastCapitalChar;\n                lastCapitalChar = null;\n            }\n        }\n    }\n    return acronym;\n}\n/*\n * create Acronym from words.\n * @param words\n * @returns {string}\n * @example XMLHttpRequest -> XHR\n * @example World Health Organization -> WHO\n */\nexport function expandWordsToAcronym(words) {\n    if (words.length === 1) {\n        return expandOneWordToAcronym(words[0]);\n    }\n    // World Health Organization -> WHO\n    return words.reduce((acronym, word) => {\n        acronym += word.charAt(0);\n        return acronym;\n    }, \"\");\n}"]}
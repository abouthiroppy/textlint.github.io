{"version":3,"sources":["../../../src/plugins/text/TextProcessor.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;wBACO,YAAY;;IACX,aAAa;AACnB,aADM,aAAa,CAClB,MAAM,EAAE;8BADH,aAAa;;AAE1B,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;iBAHgB,aAAa;;eASrB,mBAAC,GAAG,EAAE;AACX,mBAAO;AACH,0BAAU,EAAA,oBAAC,IAAI,EAAE,QAAQ,EAAE;AACvB,2BAAO,qBAAM,IAAI,CAAC,CAAC;iBACtB;AACD,2BAAW,EAAA,qBAAC,QAAQ,EAAE,QAAQ,EAAE;AAC5B,2BAAO;AACH,gCAAQ,EAAR,QAAQ;AACR,gCAAQ,EAAE,QAAQ,GAAG,QAAQ,GAAG,QAAQ;qBAC3C,CAAC;iBACL;aACJ,CAAC;SACL;;;eAhByB,+BAAG;AACzB,mBAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SAC5B;;;WAPgB,aAAa;;;qBAAb,aAAa","file":"TextProcessor.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {parse} from \"txt-to-ast\";\nexport default class TextProcessor {\n    constructor(config) {\n        this.config = config;\n    }\n\n    static availableExtensions() {\n        return [\".text\", \".txt\"];\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<text>\"\n                };\n            }\n        };\n    }\n}\n"]}
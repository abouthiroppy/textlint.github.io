{"version":3,"sources":["../../src/rule/compute-location.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;qBAQW,eAAe;;AAAxB,SAAS,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE;AACnD,QAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;AAC/B,QAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;AACnC,QAAI,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE;AAClB,YAAI,IAAI,OAAO,CAAC,IAAI,CAAC;;;AAGrB,YAAI,OAAO,CAAC,MAAM,EAAE;;AAEhB,kBAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC3B;KACJ,MAAM;AACH,YAAI,OAAO,CAAC,MAAM,EAAE;AAChB,kBAAM,IAAI,OAAO,CAAC,MAAM,CAAC;SAC5B;KACJ;;AAED,QAAI,OAAO,CAAC,GAAG,EAAE;AACb,YAAM,GAAG,GAAG;AACR,iBAAK,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjF,gBAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;SACzB,CAAC;AACF,eAAO;AACH,gBAAI,EAAJ,IAAI;AACJ,kBAAM,EAAN,MAAM;AACN,eAAG,EAAH,GAAG;SACN,CAAC;KACL;AACD,WAAO;AACH,YAAI,EAAJ,IAAI;AACJ,cAAM,EAAN,MAAM;KACT,CAAC;CACL","file":"compute-location.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/**\n * compute node's location with error's padding location.\n *\n * @param {TxtNode} node\n * @param {RuleError} padding\n * @returns {{line: number, column: number, fix?: FixCommand}}\n */\nexport default function computeLocation(node, padding) {\n    const nodeRange = node.range;\n    let line = node.loc.start.line;\n    let column = node.loc.start.column;\n    if (padding.line > 0) {\n        line += padding.line;\n        // when report with padding {line, column}, message.column should be 0 + padding.column.\n        // In other word, padding line > 0 and message.column start with 0.\n        if (padding.column) {\n            // means 0 + padding column\n            column = padding.column;\n        }\n    } else {\n        if (padding.column) {\n            column += padding.column;\n        }\n    }\n    // fix(command) is relative from node's range\n    if (padding.fix) {\n        const fix = {\n            range: [nodeRange[0] + padding.fix.range[0], nodeRange[0] + padding.fix.range[1]],\n            text: padding.fix.text\n        };\n        return {\n            line,\n            column,\n            fix\n        };\n    }\n    return {\n        line,\n        column\n    };\n}"]}
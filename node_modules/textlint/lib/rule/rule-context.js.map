{"version":3,"sources":["../../src/rule/rule-context.js"],"names":[],"mappings":";AACA,YAAY,CAAC;AACb,IAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,IAAM,aAAa,GAAG;AAClB,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,aAAS,EAAE,CAAC;AACZ,WAAO,EAAE,CAAC;CACb,CAAC;;;;;;AAMF,SAAS,WAAW,CAAC,UAAU,EAAE;AAC7B,QAAI,UAAU,IAAI,IAAI,EAAE;AACpB,eAAO,aAAa,CAAC,KAAK,CAAC;KAC9B;;AAED,QAAI,OAAO,UAAU,KAAK,SAAS,EAAE;AACjC,eAAO,UAAU,GAAG,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;KAChE;AACD,QAAI,UAAU,CAAC,QAAQ,EAAE;AACrB,cAAM,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,SAAS,oEAG5D,CAAC;AACI,eAAO,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KAC7C;AACD,WAAO,aAAa,CAAC,KAAK,CAAC;CAC9B;;AAED,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE;AAC5D,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;AACnD,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAC,KAAK,EAAE,cAAc,EAAC,CAAC,CAAC;AAC/D,QAAI,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;;;;;;AAMvC,QAAI,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE;AACjC,YAAI,KAAK,YAAY,SAAS,EAAE;AAC5B,iBAAK,CAAC,UAAU,CAAC,EAAC,MAAM,EAAN,MAAM,EAAE,IAAI,EAAJ,IAAI,EAAE,QAAQ,EAAR,QAAQ,EAAE,KAAK,EAAL,KAAK,EAAC,CAAC,CAAC;SACrD,MAAM;AACH,gBAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC;AACjD,iBAAK,CAAC,UAAU,CAAC,EAAC,MAAM,EAAN,MAAM,EAAE,IAAI,EAAJ,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAL,KAAK,EAAC,CAAC,CAAC;SAC5D;KACJ,CAAC;;AAEF,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;AAClC,WAAG,EAAA,eAAE;AACD,mBAAO,KAAK,CAAC,SAAS,EAAE,CAAC;SAC5B;KACJ,CAAC,CAAC;AACH,QAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjD,QAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAE7C,QAAI,CAAC,SAAS,GAAG,SAAS,CAAC;CAC9B;AACD,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"rule-context.js","sourcesContent":["// LICENSE : MIT\n'use strict';\nconst RuleError = require('./rule-error');\nconst assert = require('assert');\nconst SeverityLevel = {\n    \"none\": 0,\n    \"info\": 0,\n    \"warning\": 1,\n    \"error\": 2\n};\n/**\n *\n * @param ruleConfig\n * @returns {number}\n */\nfunction getSeverity(ruleConfig) {\n    if (ruleConfig == null) {\n        return SeverityLevel.error;\n    }\n    // rule:<true|false>\n    if (typeof ruleConfig === \"boolean\") {\n        return ruleConfig ? SeverityLevel.error : SeverityLevel.none;\n    }\n    if (ruleConfig.severity) {\n        assert(SeverityLevel[ruleConfig.severity] !== undefined, `please set\n\"rule-key\": {\n    \"severity\": \"<warning|error>\"\n}`);\n        return SeverityLevel[ruleConfig.severity];\n    }\n    return SeverityLevel.error;\n}\n\nfunction RuleContext(ruleId, agent, textLintConfig, ruleConfig) {\n    Object.defineProperty(this, 'id', {value: ruleId});\n    Object.defineProperty(this, 'config', {value: textLintConfig});\n    let severity = getSeverity(ruleConfig);\n    /**\n     *\n     * @param {TxtNode} node\n     * @param {RuleError|any} error error is a RuleError instance or any data\n     */\n    this.report = function (node, error) {\n        if (error instanceof RuleError) {\n            agent.pushReport({ruleId, node, severity, error});\n        } else {\n            let level = error.severity || SeverityLevel.info;\n            agent.pushReport({ruleId, node, severity: level, error});\n        }\n    };\n    // Const Values\n    Object.defineProperty(this, 'Syntax', {\n        get(){\n            return agent.getSyntax();\n        }\n    });\n    this.getFilePath = agent.getFilePath.bind(agent);\n    this.getSource = agent.getSource.bind(agent);\n    // CustomError object\n    this.RuleError = RuleError;\n}\nmodule.exports = RuleContext;\n"]}